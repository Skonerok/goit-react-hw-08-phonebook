{"version":3,"file":"static/js/760.d7cb3623.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","redux/filter/filterSelector.js","webpack://react-homework-template/./src/components/ContactsList/ContactList.module.css?ae34","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","Pages/ContactsPage.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;","// extracted by mini-css-extract-plugin\nexport default {\"phonebook__form\":\"ContactForm_phonebook__form__XB6ku\",\"phonebook__label\":\"ContactForm_phonebook__label__PN-+-\",\"phonebook__input\":\"ContactForm_phonebook__input__efLHZ\",\"phonebook__add\":\"ContactForm_phonebook__add__rli+0\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport css from './ContactForm.module.css';\nimport toast, { Toaster } from 'react-hot-toast';\n\nexport function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const name = e.target.name.value;\n    const number = e.target.number.value;\n\n  if (\n      contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())\n    ) {\n      toast.error('This contact is already exists');\n      return;\n    }\n\n    if (contacts.find(contact => contact.number === number)) {\n     toast.error('This number is already exist');\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n\n    e.target.reset();\n  };\n\n  return (\n    <div>\n      <div><Toaster/></div>\n      <form className={css.phonebook__form} onSubmit={handleSubmit}>\n        <label className={css.phonebook__label}>\n          Name\n          <input\n            className={css.phonebook__input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label className={css.phonebook__label}>\n          Number\n          <input\n            className={css.phonebook__input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button className={css.phonebook__add} type=\"submit\">\n          Add Contact\n        </button>\n      </form>\n    </div>\n  );\n}","export const selectFilter = state => state.filter;","// extracted by mini-css-extract-plugin\nexport default {\"phonebook__list\":\"ContactList_phonebook__list__Vw8IR\",\"phonebook__item\":\"ContactList_phonebook__item__66Fva\",\"phonebook__delete\":\"ContactList_phonebook__delete__WhN48\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts, selectIsLoading } from 'redux/contacts/contactsSelectors';\nimport { selectFilter } from 'redux/filter/filterSelector';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport css from './ContactList.module.css';\n\nexport function ContactsList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n\n  const getFilteredContacts = () => {\n  if (contacts && filter) {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n      );\n  }\n    return contacts;\n  };\n\n  return (\n    <>\n      {isLoading && <p>Loading...</p>}\n      <ul className={css.phonebook__list}>\n        {getFilteredContacts() && getFilteredContacts().map(({ id, name, number }) => (\n          <li className={css.phonebook__item} key={id}>\n            <span>{name}</span>:\n            <span>{number}</span>\n            <button\n              className={css.phonebook__delete}\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              Delete\n            </button>\n          </li>\n      ))}\n      </ul>\n      </>\n  );\n  };","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Filter_container__L5eml\",\"contacts__input\":\"Filter_contacts__input__Pn334\"};","import { changeFilter } from 'redux/filter/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/filter/filterSelector';\nimport css from './Filter.module.css'\n\nexport function Filter() {\nconst dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <div className={css.container}>\n      <input className={css.contacts__input} type=\"text\" placeholder='Contacts search...' value={filter} onChange={e => dispatch(changeFilter(e.target.value))} name= \"filter\" />\n    </div>\n  )\n}","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { selectIsLoading } from 'redux/contacts/contactsSelectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h2 style={{textAlign: 'center', color: '#1A1B4B', fontSize: '27px'}}>Phonebook</h2>\n      <ContactForm />\n      <Filter />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <h2 style={{textAlign: 'center', color: '#1A1B4B', fontSize: '27px'}}>Contacts:</h2>\n      <ContactsList />\n    </div>\n  );\n}"],"names":["selectContacts","state","contacts","selectIsLoading","isLoading","ContactForm","dispatch","useDispatch","useSelector","className","css","onSubmit","e","preventDefault","name","target","value","number","find","contact","toLowerCase","toast","addContact","reset","type","pattern","title","required","selectFilter","filter","ContactsList","getFilteredContacts","includes","trim","map","id","onClick","deleteContact","Filter","placeholder","onChange","changeFilter","Contacts","useEffect","fetchContacts","style","textAlign","color","fontSize"],"sourceRoot":""}